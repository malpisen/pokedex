@import "tailwindcss";

:root {
  --background: #ffffff;
  --foreground: #030303;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-jaldi: var(--font-jaldi);
  --font-jersey: var(--font-jersey);
}
/* 
@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
} */

body {
  background: var(--background);
  color: var(--foreground);
  font-family: var(--font-jaldi), Arial, Helvetica, sans-serif;
}

h1, h2, h3 {
  font-family: var(--font-jersey), Arial, Helvetica, sans-serif;
}

@utility bg-pattern {
  /* https://css-pattern.com/cubes-illusion/ */

  --s: 200px;
  /* control the size*/

  --c1: var(--color-neutral-900);
  --c2: var(--color-neutral-500);
  --c3: var(--color-neutral-700);

  background: repeating-conic-gradient(from 30deg, #0000 0 120deg, var(--c3) 0 50%) calc(var(--s)/2) calc(var(--s)*tan(30deg)/2),
    repeating-conic-gradient(from 30deg, var(--c1) 0 60deg, var(--c2) 0 120deg, var(--c3) 0 50%);
  background-size: var(--s) calc(var(--s)*tan(30deg));
}

.btn-primary {
  @apply p-2 pl-6 pr-6 mt-4 mb-14 cursor-pointer text-xl text-white bg-gradient-to-r from-orange-400 to-red-400 rounded-full font-bold flex items-center justify-center gap-1;
}

.text-gradient {
  @apply text-transparent bg-clip-text bg-gradient-to-r from-purple-800 to-blue-800;
}

/* breakout */
/* see https://www.youtube.com/watch?v=c13gpBrnGEw */
/* TODO: make tailwind utility */
.content-grid {
  --spacing-xl: 4rem;
  --spacing-lg: 2rem;
  --spacing-md: 1rem;
  --spacing-sm: .5rem;
  --spacing-xs: .25rem;

  --content-max-width: 56.25rem;
  --breakout-max-width: 75rem;
  --padding-inline: var(--spacing-md);
  --breakout-size: calc((var(--breakout-max-width) - var(--content-max-width)) / 2);

  display: grid;
  grid-template-columns:
    [full-width-start] minmax(var(--padding-inline), 1fr) [breakout-start] minmax(0, var(--breakout-size)) [content-start] min(100% - (var(--padding-inline) * 2),
      var(--content-max-width)) [content-end] minmax(0, var(--breakout-size)) [breakout-end] minmax(var(--padding-inline), 1fr) [full-width-end];
}

.content-grid> :not(.breakout, .full-width),
.full-width> :not(.breakout, .full-width) {
  grid-column: content;
}

.content-grid>.breakout {
  grid-column: breakout;
}

.content-grid>.full-width {
  grid-column: full-width;

  display: grid;
  grid-template-columns: inherit;
}